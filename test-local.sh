#!/bin/bash

# Local Testing Script
echo "üß™ Testing Medical Case Generator locally..."

# Check if Docker is running
if ! docker info > /dev/null 2>&1; then
    echo "‚ùå Docker is not running. Please start Docker Desktop."
    exit 1
fi

# Check for required environment variables
if [ ! -f .env ]; then
    echo "‚ö†Ô∏è Creating .env file template..."
    cat > .env << EOF
OPENAI_API_KEY=your_openai_api_key_here
POSTGRES_URL=your_postgresql_connection_string
REDIS_URL=redis://localhost:6379/0
BACKEND_URL=http://localhost:8000
EOF
    echo "‚ùó Please edit .env file with your actual values before continuing."
    exit 1
fi

echo "‚úÖ Docker is running"
echo "‚úÖ Environment file exists"

# Build and start services
echo "üî® Building containers..."
docker-compose build

echo "üöÄ Starting services..."
docker-compose up -d

# Wait for services to be ready
echo "‚è≥ Waiting for services to start..."
sleep 30

# Check service health
echo "üè• Checking service health..."

# Check backend
if curl -f http://localhost:8000/ > /dev/null 2>&1; then
    echo "‚úÖ Backend is healthy"
else
    echo "‚ùå Backend is not responding"
fi

# Check frontend  
if curl -f http://localhost:8501/_stcore/health > /dev/null 2>&1; then
    echo "‚úÖ Frontend is healthy"
else
    echo "‚ùå Frontend is not responding"
fi

# Check Redis
if docker exec $(docker-compose ps -q redis) redis-cli ping > /dev/null 2>&1; then
    echo "‚úÖ Redis is healthy"
else
    echo "‚ùå Redis is not responding"
fi

echo ""
echo "üéâ Local testing complete!"
echo "Access your app at:"
echo "  Frontend: http://localhost:8501"
echo "  Backend API: http://localhost:8000"
echo "  API Docs: http://localhost:8000/docs"
echo ""
echo "To stop: docker-compose down"