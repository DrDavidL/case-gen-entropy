name: Deploy to Azure Container Apps

on:
  push:
    branches: [ main ]
    paths-ignore:
      - 'README.md'
      - 'docs/**'

env:
  RESOURCE_GROUP: medical-case-generator-rg
  LOCATION: eastus
  ENVIRONMENT_NAME: medical-case-env

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Azure Login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: Build and push images to ACR
      run: |
        # Build and push backend
        az acr build \
          --registry ${{ secrets.ACR_NAME }} \
          --image case-generator-backend:${{ github.sha }} \
          --image case-generator-backend:latest \
          --file Dockerfile.backend \
          .

        # Build and push frontend
        az acr build \
          --registry ${{ secrets.ACR_NAME }} \
          --image case-generator-frontend:${{ github.sha }} \
          --image case-generator-frontend:latest \
          --file Dockerfile.frontend \
          .

    - name: Deploy Container Apps via Bicep
      run: |
        # Create resource group (idempotent)
        az group create --name ${{ env.RESOURCE_GROUP }} --location ${{ env.LOCATION }}

        # Deploy container apps environment + apps
        az deployment group create \
          --resource-group ${{ env.RESOURCE_GROUP }} \
          --template-file container-apps-bicep.bicep \
          --parameters \
            location=${{ env.LOCATION }} \
            environmentName=${{ env.ENVIRONMENT_NAME }} \
            containerRegistry=${{ secrets.ACR_NAME }}.azurecr.io \
            acrUsername=${{ secrets.ACR_USERNAME }} \
            acrPassword=${{ secrets.ACR_PASSWORD }} \
            postgresUrl='${{ secrets.POSTGRES_URL }}' \
            openaiApiKey='${{ secrets.OPENAI_API_KEY }}' \
            appUsername='${{ secrets.APP_USERNAME }}' \
            appPassword='${{ secrets.APP_PASSWORD }}'

    - name: Show deployed URLs
      run: |
        az extension add --name containerapp --upgrade -y
        FRONTEND_FQDN=$(az containerapp show --name frontend-app --resource-group ${{ env.RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv)
        BACKEND_FQDN=$(az containerapp show --name backend-app --resource-group ${{ env.RESOURCE_GROUP }} --query "properties.configuration.ingress.fqdn" -o tsv)
        echo "Deployment complete"
        echo "Frontend URL: https://$FRONTEND_FQDN"
        echo "Backend URL: https://$BACKEND_FQDN"
